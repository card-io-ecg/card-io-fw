[package]
name = "card_io_fw"
description = "Card/IO ECG device firmware"
version = "0.1.0"
authors = ["DÃ¡niel Buga <bugadani@gmail.com>"]
edition = "2021"
license = "MIT"

[workspace.dependencies]
embedded-graphics = "0.8.0"
embedded-hal = "1.0.0-rc.1"
embedded-hal-async = "1.0.0-rc.1"
embedded-hal-bus = { version = "0.1.0-rc.1", features = ["async"] }
embedded-nal-async = "0.6.0"
embedded-io = "0.6"
embedded-io-async = "0.6"
embedded-menu = "0.5.2"
embedded-svc = { version = "0.26", default-features = false }
embassy-net = { version = "0.2.1", features = [
    "nightly",
    "tcp",
    "dhcpv4",
    "dns",
    "medium-ethernet",
] }
embassy-sync = { version = "0.4.0" }
embassy-executor = { version = "0.3.2", features = [
    "nightly",
] }

heapless = "0.7"
log = { version = "0.4.18", default-features = false, features = [
    "max_level_info",
    "release_max_level_info",
] }
logger = { path = "logger" }
signal-processing = { path = "signal-processing" }
norfs = { git = "https://github.com/card-io-ecg/norfs.git", rev = "f6e4e2c" }
norfs-driver = { git = "https://github.com/card-io-ecg/norfs.git", rev = "f6e4e2c" }
norfs-esp32s3 = { git = "https://github.com/card-io-ecg/norfs.git", rev = "f6e4e2c" }
norfs-esp32c6 = { git = "https://github.com/card-io-ecg/norfs.git", rev = "f6e4e2c" }
object-chain = "0.1.3"
bad-server = { path = "bad-server" }
defmt = { version = "=0.3.5" }
ufmt = "0.2.0"

smoltcp = { version = "0.10.0", default-features = false, features = [
  "dns-max-server-count-2",
] }

[dependencies]
embassy-futures = { version = "0.1.0" }
embassy-executor = { workspace = true }
embassy-time = { version = "0.1.5", features = ["nightly", "unstable-traits"] }

embedded-hal-old = { package = "embedded-hal", version = "0.2.7" }

# esp32s2-hal = { version = "0.10.0", optional = true, features = ["rt", "async", "embassy", "embassy-time-systick", "eh1"] }
esp32s3-hal = { version = "0.13.0", optional = true, features = [
    "rt",
    "async",
    "embassy",
    "embassy-executor-thread",
    "embassy-executor-interrupt",
    "embassy-time-systick",
    "eh1",
] }
esp32c6-hal = { version = "0.6.0", optional = true, features = [
    "rt",
    "async",
    "embassy",
    "embassy-executor-thread",
    "embassy-executor-interrupt",
    "eh1",
] }
esp-backtrace = { version = "0.9.0", features = [
    "panic-handler",
    "exception-handler",
] }
esp-println = { version = "0.7.0", default-features = false, features = [
    "critical-section",
] }
esp-alloc = "0.3.0"
esp-wifi = { git = "https://github.com/esp-rs/esp-wifi.git", rev = "0db7a70", default-features = false, features = [
    "phy-enable-usb",
    "ps-max-modem",
    "wifi",
    "embedded-svc",
    "async",
    "embassy-net"
] }

display-interface = { git = "https://github.com/therealprof/display-interface.git" }
display-interface-spi = { git = "https://github.com/therealprof/display-interface.git" }
ssd1306 = { git = "https://github.com/bugadani/ssd1306.git", branch = "ehal1", features = [
    "async",
    "graphics",
    "nightly",
] }

atomic_enum = "0.2.0"
config-site = { path = "config-site", default-features = false, features = [
    "embedded",
] }
critical-section = "1.1"
device-descriptor = { path = "device-descriptor" }
fugit = "0.3.7"
register-access = { path = "register-access" }
gui = { path = "gui" }
macros = { path = "macros" }
embassy-alloc-taskpool = { path = "embassy-alloc-taskpool" }
ads129x = { path = "ads129x", features = ["ufmt-impl"] }
max17055 = { path = "max17055", optional = true, features = ["ufmt-impl"] }
signal-processing = { workspace = true, features = ["alloc"] }
replace_with = { version = "0.1", default-features = false, features = [
    "nightly",
] }
static_cell = { version = "=1.2.0", features = ["nightly"] }
bad-server = { path = "bad-server", features = ["embassy"] }
embedded-tls = { version = "0.16.2", default-features = false, features = ["async"] }
reqwless = "0.9.0"

embedded-graphics.workspace = true
embedded-hal.workspace = true
embedded-hal-async.workspace = true
embedded-hal-bus.workspace = true
embedded-nal-async.workspace = true
embedded-io.workspace = true
embedded-io-async.workspace = true
embedded-menu.workspace = true
embedded-svc.workspace = true
embassy-net.workspace = true
embassy-sync.workspace = true

norfs = { workspace = true }
norfs-driver = { workspace = true }
norfs-esp32s3 = { workspace = true, optional = true, features = [
    "critical-section",
] }
norfs-esp32c6 = { workspace = true, optional = true, features = [
    "critical-section",
] }
heapless = { workspace = true }
object-chain = { workspace = true }
ufmt = { workspace = true }

logger = { workspace = true }
log = { workspace = true, optional = true }
defmt = { workspace = true, optional = true }

smoltcp = { workspace = true }
crc = "3.0.1"
enumset = "1.1.3"

[patch.crates-io]
esp32s3-hal = { git = "https://github.com/bugadani/esp-hal.git", branch = "executor" }
esp32c6-hal = { git = "https://github.com/bugadani/esp-hal.git", branch = "executor" }
# esp-println = { git = "https://github.com/esp-rs/esp-println.git" }
# esp-backtrace = { path = "../../esp-backtrace" }
# embedded-text = { git = "https://github.com/embedded-graphics/embedded-text.git" }
# esp32-hal = { path = "../../esp-hal/esp32-hal" }
# esp32s2-hal = { path = "../../esp-hal/esp32s2-hal" }
# esp32s3-hal = { path = "../../esp-hal/esp32s3-hal" }
# esp32c2-hal = { path = "../../esp-hal/esp32c2-hal" }
# esp32c3-hal = { path = "../../esp-hal/esp32c3-hal" }
# esp32c6-hal = { path = "../../esp-hal/esp32c6-hal" }
# esp-hal-common = { path = "../../esp-hal/esp-hal-common" }
# esp-hal-procmacros = { path = "../../esp-hal/esp-hal-procmacros" }

[patch.'https://github.com/esp-rs/esp-wifi.git']
# esp-wifi = { path = "../esp-wifi/esp-wifi" }
# esp-wifi = { git = "https://github.com/bugadani/esp-wifi.git" }

[features]
default = ["defmt"]

battery_adc = []
battery_max17055 = ["dep:max17055"]

hw_v1 = ["battery_adc", "esp32s3"]
hw_v2 = ["battery_max17055", "esp32s3"] # skipped v3
hw_v4 = ["battery_max17055", "esp32s3"]
hw_v6 = ["battery_max17055"] # skipped v5, v6 has S3 and C6 options

# MCU options
# esp32s2 = ["dep:esp32s2", "dep:esp32s2-hal", "esp-backtrace/esp32s2", "esp-println/esp32s2", "rtt"]
esp32s3 = [
    "dep:esp32s3-hal",
    "esp32s3-hal/embassy-time-systick",
    "dep:norfs-esp32s3",
    "esp-backtrace/esp32s3",
    "esp-println/esp32s3",
    "jtag_serial",
    "esp-wifi/esp32s3",
]
esp32c6 = [
    "dep:esp32c6-hal",
    "esp32c6-hal/embassy-time-timg0",
    "dep:norfs-esp32c6",
    "esp-backtrace/esp32c6",
    "esp-println/esp32c6",
    "uart", # until I figure out why USB is dodgy
    "esp-wifi/esp32c6",
]

# Signal processing
downsampler-light = [] # uses IIR-based filtering and less memory

# Print options
uart = ["esp-backtrace/print-uart", "esp-println/uart"]
jtag_serial = ["esp-backtrace/print-jtag-serial", "esp-println/jtag_serial"]
rtt = ["esp-backtrace/print-rtt", "esp-println/rtt"]

log = [
    "dep:log",
    "norfs/log",
    "esp-println/log",
    "esp-println/colors",
    "esp-wifi/log",
    "esp32s3-hal?/log",
    "esp32c6-hal?/log",

    "logger/log",
    "config-site/log",
    "ads129x/log",
    "max17055?/log",
    "bad-server/log",
    "gui/log",
    "signal-processing/log",

    "embassy-net/log",
    "smoltcp/log",
]

defmt = [
    "dep:defmt",
    "norfs/defmt",
    "embedded-io/defmt-03",
    "embedded-svc/defmt",
    "embedded-graphics/defmt",
    "esp-println/defmt",
    "esp-wifi/defmt",
    "esp32s3-hal?/defmt",
    "esp32c6-hal?/defmt",

    "logger/defmt",
    "config-site/defmt",
    "ads129x/defmt",
    "max17055?/defmt",
    "bad-server/defmt",
    "gui/defmt",
    "signal-processing/defmt",
    "reqwless/defmt",
    "embedded-tls/defmt",

    "embassy-net/defmt",
    "smoltcp/defmt",
]

[package.metadata.espflash]
partition_table = "partitions.csv"
format = "esp-bootloader"

[workspace]
members = [
    ".",
    "ads129x",
    "bad-server",
    "device-descriptor",
    "embassy-alloc-taskpool",
    "gui",
    "macros",
    "register-access",
    "signal-processing",
    "xtask",
]

[profile.dev]
opt-level = 3
codegen-units = 1
lto = "thin"

[profile.release]
debug = false
codegen-units = 1
lto = "fat"

[profile.lto]
inherits = "release"
lto = "fat"
